# sample which sends different observations to the actor and critic
# since the critic can use privileged information only available to the simulator
defaults:
  - FaiveHandP0
env:
  controlFrequencyInv: 3
  
observations:
  asymmetric_observations: True
  # actor uses "history" rather than velocity, to hopefully make policy more robust to noise
  # also it does not use force observations, which are not available to the real robot (yet)
  actor_observations: ["dof_position", "dof_speed", "dof_pos_target", 
                        "obj_quat", "obj_angvel_numerical", 
                        "goal_pos", "goal_quat", "goal_quat_diff", 
                        "actions"]

  critic_observations: ["dof_position", "dof_speed", "dof_force", "dof_pos_target",
                       "obj_pos", "obj_quat", "obj_linvel", "obj_angvel_numerical",
                       "goal_pos", "goal_quat", "goal_quat_diff",
                       "pose_sensor_pos", "pose_sensor_quat", "pose_sensor_linvel", "pose_sensor_angvel", "force_sensor_force",
                       "actions"]

task:
  randomize: True
  randomization_params:
    # most params are just copied from the ShadowHandOpenAI_FF.yaml
    frequency: 2048 # Define how many simulation steps between generating new randomizations
    observations:
      range: [0, .08]  # sampled every step, regardless of "frequency". mean and variance, if distribution is "gaussian"
      range_correlated: [0, .05]  # updated every "frequency" steps, can simulate bias
      operation: "additive"
      distribution: "gaussian"
    actions:
      range: [0., .05]
      range_correlated: [0, .05]
      operation: "additive"
      distribution: "gaussian"
    actor_params:
      hand:  # this must match the name defined in create_actor
        color: True
        tendon_properties:
          damping:
            range: [0.75, 1.5]
            operation: "scaling"
            distribution: "loguniform"
          stiffness:
            range: [0.75, 1.5]
            operation: "scaling"
            distribution: "loguniform"
        dof_properties:
          damping: 
            range: [0.75, 1.5]
            operation: "scaling"
            distribution: "loguniform"
          stiffness: 
            range: [0.75, 1.5]
            operation: "scaling"
            distribution: "loguniform"
          lower:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
          upper:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
        rigid_body_properties:
          mass: 
            range: [0.75, 1.25]
            operation: "scaling"
            distribution: "uniform"
            setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
        rigid_shape_properties:
          friction: 
            num_buckets: 250
            range: [0.75, 1.25]
            operation: "scaling"
            distribution: "uniform"
      object:  # this must match the name defined in create_actor
        scale:
          range: [0.99, 1.01]  # make the average size slightly larger to compensate for lack of silicone fingertip in simulation
          operation: "scaling"
          distribution: "uniform"
          setup_only: True
        rigid_body_properties:
          mass: 
            range: [0.75, 1.25]
            operation: "scaling"
            distribution: "uniform"
            setup_only: True
        rigid_shape_properties:
          friction:
            num_buckets: 250
            range: [0.7, 1.3]
            operation: "scaling"
            distribution: "uniform"
